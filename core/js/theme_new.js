// Generated by CoffeeScript 1.6.3
(function() {
  var DefaultTheme, SpecificTheme, Theme, _ref, _ref1,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Theme = (function() {
    Theme.events = function(events) {
      var _base;
      if ((_base = this.prototype).events == null) {
        _base.events = {};
      }
      if (!this.prototype.hasOwnProperty("events")) {
        this.prototype.events = $.extend({}, this.prototype.events);
      }
      return this.prototype.events = $.extend(true, {}, this.prototype.events, events);
    };

    Theme.onDomReady = function(initializers) {
      var initializer, _base, _i, _len, _results;
      if ((_base = this.prototype).onDomReady == null) {
        _base.onDomReady = [];
      }
      if (!this.prototype.hasOwnProperty("onDomReady")) {
        this.prototype.onDomReady = this.prototype.onDomReady.slice(0);
      }
      _results = [];
      for (_i = 0, _len = initializers.length; _i < _len; _i++) {
        initializer = initializers[_i];
        _results.push(this.prototype.onDomReady.push(initializer));
      }
      return _results;
    };

    function Theme() {
      this._setupEventListeners = __bind(this._setupEventListeners, this);
      this._setupEventListeners();
    }

    Theme.prototype.domReady = function() {
      return this._loadOnDomReadyMethods();
    };

    Theme.prototype._loadOnDomReadyMethods = function() {
      var callback, _i, _len, _ref, _results;
      _ref = this.onDomReady;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        callback = _ref[_i];
        _results.push(this[callback]());
      }
      return _results;
    };

    Theme.prototype._setupEventListeners = function() {
      var $document, action, actions, callback, selector, _ref, _results;
      $document = $(document);
      _ref = this.events;
      _results = [];
      for (selector in _ref) {
        actions = _ref[selector];
        _results.push((function() {
          var _results1;
          _results1 = [];
          for (action in actions) {
            callback = actions[action];
            _results1.push($document.on(action, selector, this[callback]));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return Theme;

  })();

  DefaultTheme = (function(_super) {
    __extends(DefaultTheme, _super);

    function DefaultTheme() {
      _ref = DefaultTheme.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    DefaultTheme.events;

    DefaultTheme.onDomReady([]);

    DefaultTheme.prototype.cookieBar = function() {
      if (utils.cookies.readCookie('cookie_bar_hide') === 'b%3A1%3B') {
        return $('#cookieBar').remove();
      }
    };

    DefaultTheme.prototype.cookieBarAgree = function() {
      utils.cookies.setCookie('cookie_bar_agree', 'b:1;');
      utils.cookies.setCookie('cookie_bar_hide', 'b:1;');
      $('#cookieBar').alert('close');
      return false;
    };

    DefaultTheme.prototype.cookieBarDisagree = function() {
      utils.cookies.setCookie('cookie_bar_agree', 'b:0;');
      utils.cookies.setCookie('cookie_bar_hide', 'b:1;');
      $('#cookieBar').alert('close');
      return false;
    };

    DefaultTheme.prototype.hijackSubmit = function(e) {
      return $(this).addClass('loading disabled');
    };

    DefaultTheme.prototype.scrollToTop = function(e) {
      $('html, body').stop().animate({
        scrollTop: 0
      }, 600);
      return false;
    };

    DefaultTheme.prototype.scrollTo = function(e) {
      var $anchor, hash, href, url;
      $anchor = $(e.currentTarget);
      href = $anchor.attr('href');
      url = href.substr(0, href.indexOf('#'));
      hash = href.substr(href.indexOf('#'));
      if ((url === '' || url.indexOf(document.location.pathname) >= 0) && !$anchor.is('[data-no-scroll]') && $(hash).length > 0) {
        $('html, body').stop().animate({
          scrollTop: $(hash).offset().top
        }, 600);
        return false;
      }
    };

    DefaultTheme.prototype.removeImageHeight = function() {
      return $('img').css({
        height: 'auto'
      });
    };

    return DefaultTheme;

  })(Theme);

  SpecificTheme = (function(_super) {
    __extends(SpecificTheme, _super);

    function SpecificTheme() {
      _ref1 = SpecificTheme.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    SpecificTheme.events({
      '#toggleMenu': {
        click: 'toggleMenu'
      },
      '#content.open': {
        touchend: 'toggleMenu'
      },
      '#toggleTabletNavbar': {
        click: 'tabletMenu'
      },
      '.dropdownToggle': {
        click: 'toggleDropdown'
      }
    });

    SpecificTheme.onDomReady(['initCarousel']);

    SpecificTheme.prototype.initCarousel = function() {
      return $('.carousel').carousel();
    };

    SpecificTheme.prototype.toggleMenu = function(e) {
      if (!$('#content').hasClass('open')) {
        $('#content').addClass('open');
      } else {
        $('#content').removeClass('open');
      }
      return false;
    };

    SpecificTheme.prototype.tabletMenu = function(e) {
      if (!$('#navbar').hasClass('open')) {
        $('#navbar').addClass('open');
        return $(e.currentTarget).addClass('open');
      } else {
        $('#navbar').removeClass('open');
        return $(e.currentTarget).removeClass('open');
      }
    };

    SpecificTheme.prototype.toggleDropdown = function(e) {
      var $this;
      $this = $(e.currentTarget);
      if (!$this.hasClass('open')) {
        $this.parent().find('.dropdownItems').slideDown();
        $this.addClass('open');
      } else {
        $this.parent().find('.dropdownItems').slideUp();
        $this.removeClass('open');
      }
      return false;
    };

    return SpecificTheme;

  })(DefaultTheme);

  SpecificTheme.current = new SpecificTheme();

  $(function() {
    return SpecificTheme.current.domReady();
  });

  window.SpecificTheme = SpecificTheme;

}).call(this);
