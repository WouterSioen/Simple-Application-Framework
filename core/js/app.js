// Generated by CoffeeScript 1.7.1
(function() {
  var App,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.events;

    App.onDomReady(['heightAutocomplete']);

    App.prototype.heightAutocomplete = function() {
      var calculate, tick, ticking;
      ticking = false;
      calculate = function() {
        var $autocomplete, $window, autocompleteHeight, autocompleteHeightMobile, logoHeight, navbarHeight, searchBoxHeight;
        $window = $(window);
        navbarHeight = $('#navbar').height();
        searchBoxHeight = $('#navbar .searchBox').height();
        $autocomplete = $('.ui-autocomplete');
        logoHeight = $('#navbar .logo').height();
        autocompleteHeight = navbarHeight - searchBoxHeight - logoHeight;
        autocompleteHeightMobile = navbarHeight - searchBoxHeight - 25;
        if ($window.width() < 768) {
          $autocomplete.css({
            'max-height': autocompleteHeightMobile
          });
        } else {
          $autocomplete.css({
            'max-height': autocompleteHeight
          });
        }
        return;
        return ticking = false;
      };
      tick = function() {
        if (!ticking) {
          this.requestAnimationFrame(calculate);
          return ticking = true;
        }
      };
      $(window).on('load', function() {
        return tick();
      });
      $(window).on('resize', function() {
        return tick();
      });
    };

    return App;

  })(Framework);

  App.current = new App();

  $(function() {
    return App.current.domReady();
  });

  window.App = App;

}).call(this);
